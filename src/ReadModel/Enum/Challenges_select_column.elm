-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module ReadModel.Enum.Challenges_select_column exposing (Challenges_select_column(..), decoder, fromString, list, toString)

import Json.Decode as Decode exposing (Decoder)


{-| select columns of table "challenges"

  - Color - column name
  - Id - column name
  - Serial\_id - column name

-}
type Challenges_select_column
    = Color
    | Id
    | Serial_id


list : List Challenges_select_column
list =
    [ Color, Id, Serial_id ]


decoder : Decoder Challenges_select_column
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "color" ->
                        Decode.succeed Color

                    "id" ->
                        Decode.succeed Id

                    "serial_id" ->
                        Decode.succeed Serial_id

                    _ ->
                        Decode.fail ("Invalid Challenges_select_column type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : Challenges_select_column -> String
toString enum =
    case enum of
        Color ->
            "color"

        Id ->
            "id"

        Serial_id ->
            "serial_id"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe Challenges_select_column
fromString enumString =
    case enumString of
        "color" ->
            Just Color

        "id" ->
            Just Id

        "serial_id" ->
            Just Serial_id

        _ ->
            Nothing
