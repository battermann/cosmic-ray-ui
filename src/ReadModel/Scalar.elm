-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module ReadModel.Scalar exposing (Codecs, Id(..), Int4_(..), Uuid(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type Id
    = Id String


type Int4_
    = Int4_ String


type Uuid
    = Uuid String


defineCodecs :
    { codecId : Codec valueId
    , codecInt4_ : Codec valueInt4_
    , codecUuid : Codec valueUuid
    }
    -> Codecs valueId valueInt4_ valueUuid
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueId valueInt4_ valueUuid
    ->
        { codecId : Codec valueId
        , codecInt4_ : Codec valueInt4_
        , codecUuid : Codec valueUuid
        }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueId valueInt4_ valueUuid
    = Codecs (RawCodecs valueId valueInt4_ valueUuid)


type alias RawCodecs valueId valueInt4_ valueUuid =
    { codecId : Codec valueId
    , codecInt4_ : Codec valueInt4_
    , codecUuid : Codec valueUuid
    }


defaultCodecs : RawCodecs Id Int4_ Uuid
defaultCodecs =
    { codecId =
        { encoder = \(Id raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Id
        }
    , codecInt4_ =
        { encoder = \(Int4_ raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Int4_
        }
    , codecUuid =
        { encoder = \(Uuid raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Uuid
        }
    }
