-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module ReadModel.Object.Games exposing (gameStateByGameState, game_state, id, moves, player, playerByPlayer, serial_id)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import ReadModel.Enum.Game_state_enum
import ReadModel.Enum.Player_enum
import ReadModel.InputObject
import ReadModel.Interface
import ReadModel.Object
import ReadModel.Scalar
import ReadModel.Union
import ScalarCodecs


{-| An object relationship
-}
gameStateByGameState : SelectionSet decodesTo ReadModel.Object.Game_state -> SelectionSet decodesTo ReadModel.Object.Games
gameStateByGameState object_ =
    Object.selectionForCompositeField "gameStateByGameState" [] object_ identity


game_state : SelectionSet ReadModel.Enum.Game_state_enum.Game_state_enum ReadModel.Object.Games
game_state =
    Object.selectionForField "Enum.Game_state_enum.Game_state_enum" "game_state" [] ReadModel.Enum.Game_state_enum.decoder


id : SelectionSet ScalarCodecs.Uuid ReadModel.Object.Games
id =
    Object.selectionForField "ScalarCodecs.Uuid" "id" [] (ScalarCodecs.codecs |> ReadModel.Scalar.unwrapCodecs |> .codecUuid |> .decoder)


moves : SelectionSet ScalarCodecs.Int4_ ReadModel.Object.Games
moves =
    Object.selectionForField "ScalarCodecs.Int4_" "moves" [] (ScalarCodecs.codecs |> ReadModel.Scalar.unwrapCodecs |> .codecInt4_ |> .decoder)


player : SelectionSet ReadModel.Enum.Player_enum.Player_enum ReadModel.Object.Games
player =
    Object.selectionForField "Enum.Player_enum.Player_enum" "player" [] ReadModel.Enum.Player_enum.decoder


{-| An object relationship
-}
playerByPlayer : SelectionSet decodesTo ReadModel.Object.Player -> SelectionSet decodesTo ReadModel.Object.Games
playerByPlayer object_ =
    Object.selectionForCompositeField "playerByPlayer" [] object_ identity


serial_id : SelectionSet Int ReadModel.Object.Games
serial_id =
    Object.selectionForField "Int" "serial_id" [] Decode.int
